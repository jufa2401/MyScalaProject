res0: Double = 0.0
res1: Double = 1450.0
res2: Double = 62500.0
res3: Double = 500000.0
java.lang.Exception: invalid income
res4: AnyVal = ()




tax: tax[](val income: Double) => Double











****
****
****
res5: Unit = ()
drawRectangle: drawRectangle[](val height: Int,val length: Int) => Unit











0 + 0 =0
0 + 1 =1
0 + 2 =2
0 + 3 =3
1 + 0 =1
1 + 1 =2
1 + 2 =3
1 + 3 =4
2 + 0 =2
2 + 1 =3
2 + 2 =4
2 + 3 =5
res6: Unit = ()
printSums: printSums[](val n: Int,val m: Int) => Unit








i = 1
i = 2
i = 4
i = 5
i = 7
i = 8
done
res7: Unit = ()
mystery: mystery[]() => Unit









below10: below10[](val x: Double) => Option[Double]





root: root[](val x: Double) => Option[Double]






pureBelow10: pureBelow10[](val x: Option[Double]) => Option[Double]






pureRoot: pureRoot[](val x: Option[Double]) => Option[Double]






below10root: below10root[](val x: Option[Double]) => Option[Double]





res8: Option[Double] = None
res9: Option[Double] = Some(8.0)
res10: Option[Double] = None
res11: Option[Double] = None
res12: Option[Double] = Some(-100.0)
res13: Option[Double] = None
res14: Option[Double] = None
res15: Option[Double] = None
res16: Option[Double] = Some(3.0)
res17: Option[Double] = None
